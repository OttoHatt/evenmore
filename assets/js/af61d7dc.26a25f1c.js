"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[385],{3167:e=>{e.exports=JSON.parse('{"functions":[{"name":"getFocalPoint","desc":"Gets the focal point via the [Workspace.CurrentCamera].","params":[],"returns":[{"desc":"","lua_type":"Vector3"}],"function_type":"static","source":{"line":25,"path":"src/focalpoint/Client/FocalPointUtils.lua"}},{"name":"observeInstancePosition","desc":"Observe the position of a given instance.","params":[{"name":"instance","desc":"","lua_type":"Instance"}],"returns":[{"desc":"","lua_type":"Observable<Vector3>"}],"function_type":"static","ignore":true,"source":{"line":39,"path":"src/focalpoint/Client/FocalPointUtils.lua"}},{"name":"observeFocalPoint","desc":"Observes the focal point via the [Workspace.CurrentCamera].","params":[],"returns":[{"desc":"","lua_type":"Observable<Vector3>"}],"function_type":"static","source":{"line":48,"path":"src/focalpoint/Client/FocalPointUtils.lua"}}],"properties":[],"types":[],"name":"FocalPointUtils","desc":"Tries to find the position that we, the client, are most interested in.\\nThis could be the character, of the current camera position. Not sure!\\n\\nWe do this is in a pretty neat way, which is watching the [Camera.CameraSubject].\\nIt should therefore support custom characters, humanoids, and studio.","realm":["Client"],"source":{"line":11,"path":"src/focalpoint/Client/FocalPointUtils.lua"}}')}}]);